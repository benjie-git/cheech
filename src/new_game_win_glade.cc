// generated 2006/5/26 14:41:42 PDT by benjie@paddy.(none)
// using glademm V2.6.0
//
// DO NOT EDIT THIS FILE ! It was created using
// glade-- /home/benjie/projects/cheech/cheech.glade
// for gtk 2.8.6 and gtkmm 2.8.0
//
// Please modify the corresponding derived classes in ./src/new_game_win.cc


#if defined __GNUC__ && __GNUC__ < 3
#error This program will crash if compiled with g++ 2.x
// see the dynamic_cast bug in the gtkmm FAQ
#endif //
#include "config.h"
/*
 * Standard gettext macros.
 */
#ifdef ENABLE_NLS
#  include <libintl.h>
#  undef _
#  define _(String) dgettext (GETTEXT_PACKAGE, String)
#  ifdef gettext_noop
#    define N_(String) gettext_noop (String)
#  else
#    define N_(String) (String)
#  endif
#else
#  define textdomain(String) (String)
#  define gettext(String) (String)
#  define dgettext(Domain,Message) (Message)
#  define dcgettext(Domain,Message,Type) (Message)
#  define bindtextdomain(Domain,Directory) (Domain)
#  define _(String) (String)
#  define N_(String) (String)
#endif
#include <gtkmmconfig.h>
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
//#include <sigc++/compatibility.h>
#define GMM_GTKMM_22_24(a,b) b
#else //gtkmm 2.2
#define GMM_GTKMM_22_24(a,b) a
#endif //
#include "new_game_win_glade.hh"
#include <gdk/gdkkeysyms.h>
#include <gtkmm/accelgroup.h>
#include <gtkmm/label.h>
#include <gtkmm/radiobutton.h>
#include <gtkmm/table.h>
#include <gtkmm/alignment.h>
#include <gtkmm/frame.h>
#include <gtkmm/box.h>
#include <gtkmm/adjustment.h>
#include <gtkmm/button.h>
#include <gtkmm/image.h>
#include <gtkmm/buttonbox.h>

new_game_win_glade::new_game_win_glade(
) : Gtk::Window(Gtk::WINDOW_TOPLEVEL)
{

   Gtk::Window *new_game_win = this;
   gmm_data = new GlademmData(get_accel_group());
   name_entry = Gtk::manage(new class Gtk::Entry());

   Gtk::Label *label15 = Gtk::manage(new class Gtk::Label(_("Name:")));
   Gtk::Label *label26 = Gtk::manage(new class Gtk::Label(_("Color:")));
   Gtk::RadioButton::Group _RadioBGroup_orange;
   orange = Gtk::manage(new class Gtk::RadioButton(_RadioBGroup_orange, _("Orange")));
   yellow = Gtk::manage(new class Gtk::RadioButton(_RadioBGroup_orange, _("Yellow")));
   white = Gtk::manage(new class Gtk::RadioButton(_RadioBGroup_orange, _("White")));
   blue = Gtk::manage(new class Gtk::RadioButton(_RadioBGroup_orange, _("Blue")));
   purple = Gtk::manage(new class Gtk::RadioButton(_RadioBGroup_orange, _("Purple")));
   black = Gtk::manage(new class Gtk::RadioButton(_RadioBGroup_orange, _("Black")));
   red = Gtk::manage(new class Gtk::RadioButton(_RadioBGroup_orange, _("Red")));
   green = Gtk::manage(new class Gtk::RadioButton(_RadioBGroup_orange, _("Green")));

   Gtk::Table *table5 = Gtk::manage(new class Gtk::Table(2, 2, false));
   spectator = Gtk::manage(new class Gtk::CheckButton(_("Join As A Spectator (Not Playing)")));

   Gtk::Table *table4 = Gtk::manage(new class Gtk::Table(2, 2, false));
   Gtk::Alignment *alignment11 = Gtk::manage(new class Gtk::Alignment(0.5, 0.5, 1, 1));
   Gtk::Label *label25 = Gtk::manage(new class Gtk::Label(_("<b>Your Player</b>")));
   Gtk::Frame *frame8 = Gtk::manage(new class Gtk::Frame());
   Gtk::Label *label19 = Gtk::manage(new class Gtk::Label(_("Port Number:")));
   host_port_entry = Gtk::manage(new class Gtk::Entry());

   Gtk::HBox *hbox15 = Gtk::manage(new class Gtk::HBox(false, 6));
   Gtk::Label *label24 = Gtk::manage(new class Gtk::Label(_("Number Of Players:")));
   Gtk::Adjustment *num_players_adj = Gtk::manage(new class Gtk::Adjustment(3, 1, 6, 1, 1, 1));
   num_players = Gtk::manage(new class Gtk::SpinButton(*num_players_adj, 1, 0));

   Gtk::HBox *hbox14 = Gtk::manage(new class Gtk::HBox(false, 6));
   long_jumps = Gtk::manage(new class Gtk::CheckButton(_("Allow Long Jumps (Sue Wen Rules)")));
   hop_others = Gtk::manage(new class Gtk::CheckButton(_("Allow Hopping Through Other Players' Triangles")));
   stop_others = Gtk::manage(new class Gtk::CheckButton(_("Allow Stopping In Other Players' Triangles")));

   Gtk::VBox *vbox8 = Gtk::manage(new class Gtk::VBox(false, 0));
   Gtk::Alignment *alignment10 = Gtk::manage(new class Gtk::Alignment(0.5, 0.5, 1, 1));
   Gtk::Label *label23 = Gtk::manage(new class Gtk::Label(_("<b>Game Setup</b>")));
   Gtk::Frame *frame7 = Gtk::manage(new class Gtk::Frame());
   Gtk::VBox *vbox20 = Gtk::manage(new class Gtk::VBox(false, 0));
   cheechweb = Gtk::manage(new class Gtk::CheckButton(_("Also Start a CheechWeb server")));

   Gtk::Label *label72 = Gtk::manage(new class Gtk::Label(_("CheechWeb Port Number:")));
   cheechweb_port_entry = Gtk::manage(new class Gtk::Entry());

   Gtk::HBox *hbox16 = Gtk::manage(new class Gtk::HBox(false, 6));
   Gtk::VBox *vbox21 = Gtk::manage(new class Gtk::VBox(false, 0));
   Gtk::Alignment *alignment28 = Gtk::manage(new class Gtk::Alignment(0.5, 0.5, 1, 1));
   Gtk::Label *label71 = Gtk::manage(new class Gtk::Label(_("<b>CheechWeb</b>")));
   Gtk::Frame *frame15 = Gtk::manage(new class Gtk::Frame());
   Gtk::Button *host_cancel_button = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-cancel")));
   Gtk::Image *image13 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-apply"), Gtk::IconSize(4)));
   Gtk::Label *label22 = Gtk::manage(new class Gtk::Label(_("Host Board")));
   Gtk::HBox *hbox4 = Gtk::manage(new class Gtk::HBox(false, 2));
   Gtk::Alignment *alignment9 = Gtk::manage(new class Gtk::Alignment(0.5, 0.5, 0, 0));
   host_button = Gtk::manage(new class Gtk::Button());

   Gtk::HButtonBox *hbuttonbox4 = Gtk::manage(new class Gtk::HButtonBox(Gtk::BUTTONBOX_END, 6));
   Gtk::VBox *vbox7 = Gtk::manage(new class Gtk::VBox(false, 0));
   Gtk::Label *label13 = Gtk::manage(new class Gtk::Label(_("Host A New Board")));
   Gtk::Label *label16 = Gtk::manage(new class Gtk::Label(_("Host Name:")));
   Gtk::Label *label17 = Gtk::manage(new class Gtk::Label(_("Port Number:")));
   join_port_entry = Gtk::manage(new class Gtk::Entry());
   join_host_entry = new class GtkComboBoxEntryText();

   Gtk::Table *table2 = Gtk::manage(new class Gtk::Table(2, 2, false));
   Gtk::Button *join_cancel_button = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-cancel")));
   Gtk::Image *image12 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-apply"), Gtk::IconSize(4)));
   Gtk::Label *label21 = Gtk::manage(new class Gtk::Label(_("Join Board")));
   Gtk::HBox *hbox3 = Gtk::manage(new class Gtk::HBox(false, 2));
   Gtk::Alignment *alignment8 = Gtk::manage(new class Gtk::Alignment(0.5, 0.5, 0, 0));
   join_button = Gtk::manage(new class Gtk::Button());

   Gtk::HButtonBox *hbuttonbox3 = Gtk::manage(new class Gtk::HButtonBox(Gtk::BUTTONBOX_END, 6));
   Gtk::VBox *vbox6 = Gtk::manage(new class Gtk::VBox(false, 0));
   Gtk::Label *label14 = Gtk::manage(new class Gtk::Label(_("Join An Existing Board")));
   role_notebook = Gtk::manage(new class Gtk::Notebook());

   Gtk::VBox *vbox5 = Gtk::manage(new class Gtk::VBox(false, 6));
   name_entry->set_flags(Gtk::CAN_FOCUS);
   name_entry->set_visibility(true);
   name_entry->set_editable(true);
   name_entry->set_max_length(0);
   name_entry->set_text(_(""));
   name_entry->set_has_frame(true);
   name_entry->set_activates_default(false);
   label15->set_alignment(0.5,0.5);
   label15->set_padding(0,0);
   label15->set_justify(Gtk::JUSTIFY_LEFT);
   label15->set_line_wrap(false);
   label15->set_use_markup(false);
   label15->set_selectable(false);
   label26->set_alignment(0.5,0.5);
   label26->set_padding(0,0);
   label26->set_justify(Gtk::JUSTIFY_LEFT);
   label26->set_line_wrap(false);
   label26->set_use_markup(false);
   label26->set_selectable(false);
   orange->set_flags(Gtk::CAN_FOCUS);
   orange->set_relief(Gtk::RELIEF_NORMAL);
   orange->set_mode(true);
   orange->set_active(false);
   yellow->set_flags(Gtk::CAN_FOCUS);
   yellow->set_relief(Gtk::RELIEF_NORMAL);
   yellow->set_mode(true);
   yellow->set_active(false);
   white->set_flags(Gtk::CAN_FOCUS);
   white->set_relief(Gtk::RELIEF_NORMAL);
   white->set_mode(true);
   white->set_active(false);
   blue->set_flags(Gtk::CAN_FOCUS);
   blue->set_relief(Gtk::RELIEF_NORMAL);
   blue->set_mode(true);
   blue->set_active(false);
   purple->set_flags(Gtk::CAN_FOCUS);
   purple->set_relief(Gtk::RELIEF_NORMAL);
   purple->set_mode(true);
   purple->set_active(false);
   black->set_flags(Gtk::CAN_FOCUS);
   black->set_relief(Gtk::RELIEF_NORMAL);
   black->set_mode(true);
   black->set_active(false);
   red->set_flags(Gtk::CAN_FOCUS);
   red->set_relief(Gtk::RELIEF_NORMAL);
   red->set_mode(true);
   red->set_active(true);
   green->set_flags(Gtk::CAN_FOCUS);
   green->set_relief(Gtk::RELIEF_NORMAL);
   green->set_mode(true);
   green->set_active(false);
   table5->set_row_spacings(0);
   table5->set_col_spacings(0);
   table5->attach(*orange, 1, 2, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table5->attach(*yellow, 2, 3, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table5->attach(*white, 3, 4, 1, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table5->attach(*blue, 0, 1, 1, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table5->attach(*purple, 1, 2, 1, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table5->attach(*black, 2, 3, 1, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table5->attach(*red, 0, 1, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table5->attach(*green, 3, 4, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   spectator->set_flags(Gtk::CAN_FOCUS);
   spectator->set_relief(Gtk::RELIEF_NORMAL);
   spectator->set_mode(true);
   spectator->set_active(false);
   table4->set_border_width(6);
   table4->set_row_spacings(3);
   table4->set_col_spacings(3);
   table4->attach(*name_entry, 1, 2, 0, 1, Gtk::EXPAND|Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table4->attach(*label15, 0, 1, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table4->attach(*label26, 0, 1, 1, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table4->attach(*table5, 1, 2, 1, 2, Gtk::EXPAND|Gtk::FILL, Gtk::FILL, 0, 0);
   table4->attach(*spectator, 1, 2, 2, 3, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   alignment11->add(*table4);
   label25->set_alignment(0.5,0.5);
   label25->set_padding(0,0);
   label25->set_justify(Gtk::JUSTIFY_LEFT);
   label25->set_line_wrap(false);
   label25->set_use_markup(true);
   label25->set_selectable(false);
   frame8->set_border_width(3);
   frame8->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame8->set_label_align(0,0.5);
   frame8->add(*alignment11);
   frame8->set_label_widget(*label25);
   label19->set_alignment(0,0.5);
   label19->set_padding(0,0);
   label19->set_justify(Gtk::JUSTIFY_LEFT);
   label19->set_line_wrap(false);
   label19->set_use_markup(false);
   label19->set_selectable(false);
   host_port_entry->set_flags(Gtk::CAN_FOCUS);
   host_port_entry->set_visibility(true);
   host_port_entry->set_editable(true);
   host_port_entry->set_max_length(0);
   host_port_entry->set_text(_("3838"));
   host_port_entry->set_has_frame(true);
   host_port_entry->set_activates_default(false);
   hbox15->set_border_width(6);
   hbox15->pack_start(*label19, Gtk::PACK_SHRINK, 0);
   hbox15->pack_start(*host_port_entry);
   label24->set_alignment(0,0.5);
   label24->set_padding(0,0);
   label24->set_justify(Gtk::JUSTIFY_LEFT);
   label24->set_line_wrap(false);
   label24->set_use_markup(false);
   label24->set_selectable(false);
   num_players->set_flags(Gtk::CAN_FOCUS);
   num_players->set_update_policy(Gtk::UPDATE_ALWAYS);
   num_players->set_numeric(false);
   num_players->set_digits(0);
   num_players->set_wrap(true);
   hbox14->pack_start(*label24, Gtk::PACK_SHRINK, 0);
   hbox14->pack_start(*num_players, Gtk::PACK_SHRINK, 0);
   long_jumps->set_flags(Gtk::CAN_FOCUS);
   long_jumps->set_relief(Gtk::RELIEF_NORMAL);
   long_jumps->set_mode(true);
   long_jumps->set_active(true);
   hop_others->set_flags(Gtk::CAN_FOCUS);
   hop_others->set_relief(Gtk::RELIEF_NORMAL);
   hop_others->set_mode(true);
   hop_others->set_active(true);
   stop_others->set_flags(Gtk::CAN_FOCUS);
   stop_others->set_relief(Gtk::RELIEF_NORMAL);
   stop_others->set_mode(true);
   stop_others->set_active(true);
   vbox8->pack_start(*hbox14, Gtk::PACK_SHRINK, 0);
   vbox8->pack_start(*long_jumps, Gtk::PACK_SHRINK, 0);
   vbox8->pack_start(*hop_others, Gtk::PACK_SHRINK, 0);
   vbox8->pack_start(*stop_others, Gtk::PACK_SHRINK, 0);
   alignment10->set_border_width(3);
   alignment10->add(*vbox8);
   label23->set_alignment(0.5,0.5);
   label23->set_padding(0,0);
   label23->set_justify(Gtk::JUSTIFY_LEFT);
   label23->set_line_wrap(false);
   label23->set_use_markup(true);
   label23->set_selectable(false);
   frame7->set_border_width(6);
   frame7->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame7->set_label_align(0,0.5);
   frame7->add(*alignment10);
   frame7->set_label_widget(*label23);
   vbox20->pack_start(*hbox15);
   vbox20->pack_start(*frame7);
   cheechweb->set_flags(Gtk::CAN_FOCUS);
   cheechweb->set_relief(Gtk::RELIEF_NORMAL);
   cheechweb->set_mode(true);
   cheechweb->set_active(false);
   label72->set_alignment(0,0.5);
   label72->set_padding(0,0);
   label72->set_justify(Gtk::JUSTIFY_LEFT);
   label72->set_line_wrap(false);
   label72->set_use_markup(false);
   label72->set_selectable(false);
   cheechweb_port_entry->set_flags(Gtk::CAN_FOCUS);
   cheechweb_port_entry->set_visibility(true);
   cheechweb_port_entry->set_editable(true);
   cheechweb_port_entry->set_max_length(0);
   cheechweb_port_entry->set_text(_("3839"));
   cheechweb_port_entry->set_has_frame(true);
   cheechweb_port_entry->set_activates_default(false);
   hbox16->pack_start(*label72, Gtk::PACK_SHRINK, 0);
   hbox16->pack_start(*cheechweb_port_entry);
   vbox21->set_border_width(3);
   vbox21->pack_start(*cheechweb, Gtk::PACK_SHRINK, 0);
   vbox21->pack_start(*hbox16);
   alignment28->add(*vbox21);
   label71->set_alignment(0.5,0.5);
   label71->set_padding(0,0);
   label71->set_justify(Gtk::JUSTIFY_LEFT);
   label71->set_line_wrap(false);
   label71->set_use_markup(true);
   label71->set_selectable(false);
   frame15->set_border_width(6);
   frame15->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame15->set_label_align(0,0.5);
   frame15->add(*alignment28);
   frame15->set_label_widget(*label71);
   host_cancel_button->set_flags(Gtk::CAN_FOCUS);
   host_cancel_button->set_flags(Gtk::CAN_DEFAULT);
   host_cancel_button->set_relief(Gtk::RELIEF_NORMAL);
   image13->set_alignment(0.5,0.5);
   image13->set_padding(0,0);
   label22->set_alignment(0.5,0.5);
   label22->set_padding(0,0);
   label22->set_justify(Gtk::JUSTIFY_LEFT);
   label22->set_line_wrap(false);
   label22->set_use_markup(false);
   label22->set_selectable(false);
   hbox4->pack_start(*image13, Gtk::PACK_SHRINK, 0);
   hbox4->pack_start(*label22, Gtk::PACK_SHRINK, 0);
   alignment9->add(*hbox4);
   host_button->set_flags(Gtk::CAN_FOCUS);
   host_button->set_flags(Gtk::CAN_DEFAULT);
   host_button->set_relief(Gtk::RELIEF_NORMAL);
   host_button->add(*alignment9);
   hbuttonbox4->set_border_width(6);
   hbuttonbox4->pack_start(*host_cancel_button);
   hbuttonbox4->pack_start(*host_button);
   vbox7->pack_start(*vbox20, Gtk::PACK_EXPAND_PADDING, 0);
   vbox7->pack_start(*frame15, Gtk::PACK_SHRINK, 0);
   vbox7->pack_start(*hbuttonbox4);
   label13->set_alignment(0.5,0.5);
   label13->set_padding(0,0);
   label13->set_justify(Gtk::JUSTIFY_LEFT);
   label13->set_line_wrap(false);
   label13->set_use_markup(false);
   label13->set_selectable(false);
   label16->set_alignment(0,0.5);
   label16->set_padding(0,0);
   label16->set_justify(Gtk::JUSTIFY_LEFT);
   label16->set_line_wrap(false);
   label16->set_use_markup(false);
   label16->set_selectable(false);
   label17->set_alignment(0,0.5);
   label17->set_padding(0,0);
   label17->set_justify(Gtk::JUSTIFY_LEFT);
   label17->set_line_wrap(false);
   label17->set_use_markup(false);
   label17->set_selectable(false);
   join_port_entry->set_flags(Gtk::CAN_FOCUS);
   join_port_entry->set_visibility(true);
   join_port_entry->set_editable(true);
   join_port_entry->set_max_length(0);
   join_port_entry->set_text(_("3838"));
   join_port_entry->set_has_frame(true);
   join_port_entry->set_activates_default(false);
   table2->set_border_width(6);
   table2->set_row_spacings(6);
   table2->set_col_spacings(6);
   table2->attach(*label16, 0, 1, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table2->attach(*label17, 0, 1, 1, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table2->attach(*join_port_entry, 1, 2, 1, 2, Gtk::EXPAND|Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table2->attach(*join_host_entry, 1, 2, 0, 1, Gtk::FILL, Gtk::FILL, 0, 0);
   join_cancel_button->set_flags(Gtk::CAN_FOCUS);
   join_cancel_button->set_flags(Gtk::CAN_DEFAULT);
   join_cancel_button->set_relief(Gtk::RELIEF_NORMAL);
   image12->set_alignment(0.5,0.5);
   image12->set_padding(0,0);
   label21->set_alignment(0.5,0.5);
   label21->set_padding(0,0);
   label21->set_justify(Gtk::JUSTIFY_LEFT);
   label21->set_line_wrap(false);
   label21->set_use_markup(false);
   label21->set_selectable(false);
   hbox3->pack_start(*image12, Gtk::PACK_SHRINK, 0);
   hbox3->pack_start(*label21, Gtk::PACK_SHRINK, 0);
   alignment8->add(*hbox3);
   join_button->set_flags(Gtk::CAN_FOCUS);
   join_button->set_flags(Gtk::CAN_DEFAULT);
   join_button->set_relief(Gtk::RELIEF_NORMAL);
   join_button->add(*alignment8);
   hbuttonbox3->set_border_width(6);
   hbuttonbox3->pack_start(*join_cancel_button);
   hbuttonbox3->pack_start(*join_button);
   vbox6->pack_start(*table2);
   vbox6->pack_start(*hbuttonbox3, Gtk::PACK_SHRINK, 0);
   label14->set_alignment(0.5,0.5);
   label14->set_padding(0,0);
   label14->set_justify(Gtk::JUSTIFY_LEFT);
   label14->set_line_wrap(false);
   label14->set_use_markup(false);
   label14->set_selectable(false);
   role_notebook->set_flags(Gtk::CAN_FOCUS);
   role_notebook->set_show_tabs(true);
   role_notebook->set_show_border(true);
   role_notebook->set_tab_pos(Gtk::POS_TOP);
   role_notebook->set_scrollable(false);
   role_notebook->append_page(*vbox7, *label13);
   role_notebook->pages().back().set_tab_label_packing(false, true, Gtk::PACK_START);
   role_notebook->append_page(*vbox6, *label14);
   role_notebook->pages().back().set_tab_label_packing(false, true, Gtk::PACK_START);
   vbox5->set_border_width(3);
   vbox5->pack_start(*frame8, Gtk::PACK_SHRINK, 0);
   vbox5->pack_start(*role_notebook);
   new_game_win->set_title(_("Host Or Join A Board"));
   new_game_win->set_modal(false);
   new_game_win->property_window_position().set_value(Gtk::WIN_POS_NONE);
   new_game_win->set_resizable(true);
   new_game_win->property_destroy_with_parent().set_value(false);
   new_game_win->add(*vbox5);
   name_entry->show();
   label15->show();
   label26->show();
   orange->show();
   yellow->show();
   white->show();
   blue->show();
   purple->show();
   black->show();
   red->show();
   green->show();
   table5->show();
   spectator->show();
   table4->show();
   alignment11->show();
   label25->show();
   frame8->show();
   label19->show();
   host_port_entry->show();
   hbox15->show();
   label24->show();
   num_players->show();
   hbox14->show();
   long_jumps->show();
   hop_others->show();
   stop_others->show();
   vbox8->show();
   alignment10->show();
   label23->show();
   frame7->show();
   vbox20->show();
   cheechweb->show();
   label72->show();
   cheechweb_port_entry->show();
   hbox16->show();
   vbox21->show();
   alignment28->show();
   label71->show();
   frame15->show();
   host_cancel_button->show();
   image13->show();
   label22->show();
   hbox4->show();
   alignment9->show();
   host_button->show();
   hbuttonbox4->show();
   vbox7->show();
   label13->show();
   label16->show();
   label17->show();
   join_port_entry->show();
   join_host_entry->show();
   table2->show();
   join_cancel_button->show();
   image12->show();
   label21->show();
   hbox3->show();
   alignment8->show();
   join_button->show();
   hbuttonbox3->show();
   vbox6->show();
   label14->show();
   role_notebook->show();
   vbox5->show();
   name_entry->signal_activate().connect(sigc::mem_fun(this, &new_game_win_glade::on_name_entry_activate), false);
   host_port_entry->signal_activate().connect(sigc::mem_fun(this, &new_game_win_glade::on_host_port_entry_activate), false);
   num_players->signal_activate().connect(sigc::mem_fun(this, &new_game_win_glade::on_num_players_activate), false);
   cheechweb->signal_toggled().connect(sigc::mem_fun(this, &new_game_win_glade::on_cheechweb_toggled), false);
   cheechweb_port_entry->signal_activate().connect(sigc::mem_fun(this, &new_game_win_glade::on_cheechweb_port_entry_activate), false);
   host_cancel_button->signal_clicked().connect(sigc::mem_fun(this, &new_game_win_glade::on_host_cancel_button_clicked), false);
   host_button->signal_clicked().connect(sigc::mem_fun(this, &new_game_win_glade::on_host_button_clicked), false);
   join_port_entry->signal_activate().connect(sigc::mem_fun(this, &new_game_win_glade::on_join_port_entry_activate), false);
   join_cancel_button->signal_clicked().connect(sigc::mem_fun(this, &new_game_win_glade::on_join_cancel_button_clicked), false);
   join_button->signal_clicked().connect(sigc::mem_fun(this, &new_game_win_glade::on_join_button_clicked), false);
   host_button->grab_default();
}

new_game_win_glade::~new_game_win_glade()
{  delete join_host_entry;
   delete gmm_data;
}
