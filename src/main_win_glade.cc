// generated 2006/4/7 0:19:22 EST by benjie@paddy.(none)
// using glademm V2.6.0
//
// DO NOT EDIT THIS FILE ! It was created using
// glade-- /home/benjie/projects/cheech/cheech.glade
// for gtk 2.8.6 and gtkmm 2.8.0
//
// Please modify the corresponding derived classes in ./src/main_win.cc


#if defined __GNUC__ && __GNUC__ < 3
#error This program will crash if compiled with g++ 2.x
// see the dynamic_cast bug in the gtkmm FAQ
#endif //
#include "config.h"
/*
 * Standard gettext macros.
 */
#ifdef ENABLE_NLS
#  include <libintl.h>
#  undef _
#  define _(String) dgettext (GETTEXT_PACKAGE, String)
#  ifdef gettext_noop
#    define N_(String) gettext_noop (String)
#  else
#    define N_(String) (String)
#  endif
#else
#  define textdomain(String) (String)
#  define gettext(String) (String)
#  define dgettext(Domain,Message) (Message)
#  define dcgettext(Domain,Message,Type) (Message)
#  define bindtextdomain(Domain,Directory) (Domain)
#  define _(String) (String)
#  define N_(String) (String)
#endif
#include <gtkmmconfig.h>
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
//#include <sigc++/compatibility.h>
#define GMM_GTKMM_22_24(a,b) b
#else //gtkmm 2.2
#define GMM_GTKMM_22_24(a,b) a
#endif //
#include "main_win_glade.hh"
#include <gdk/gdkkeysyms.h>
#include <gtkmm/accelgroup.h>
#include <gtkmm/menuitem.h>
#include <gtkmm/menu.h>
#include <gtkmm/imagemenuitem.h>
#include <gtk/gtkimagemenuitem.h>
#include <gtkmm/image.h>
#include <gtkmm/menubar.h>
#include <gtkmm/frame.h>
#include <gtkmm/box.h>
#include <gtkmm/alignment.h>
#include <gtkmm/label.h>
#include <gtkmm/table.h>
#include <gtkmm/scrolledwindow.h>
#include <gtkmm/paned.h>
#include <gtkmm/statusbar.h>

main_win_glade::main_win_glade(
) : Gtk::Window(Gtk::WINDOW_TOPLEVEL)
{

   Gtk::Window *main_win = this;
   gmm_data = new GlademmData(get_accel_group());
   new_game = NULL;
   end_game = NULL;

   Gtk::MenuItem *separator4 = NULL;
   join_game = NULL;
   leave_game = NULL;
   Gtk::MenuItem *separatormenuitem1 = NULL;
   game_settings = NULL;
   rotate = NULL;
   shuffle = NULL;
   restart_game = NULL;
   Gtk::Menu *restart_submenu_menu = Gtk::manage(new class Gtk::Menu());
   restart_submenu = NULL;
   Gtk::MenuItem *separator7 = NULL;
   Gtk::ImageMenuItem *quit = NULL;
   Gtk::Menu *menuitem1_menu = Gtk::manage(new class Gtk::Menu());
   Gtk::MenuItem *menuitem1 = NULL;
   Gtk::Image *image46 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-undo"), Gtk::IconSize(1)));
   undo = NULL;
   Gtk::Image *image47 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-redo"), Gtk::IconSize(1)));
   redo = NULL;
   show_last_move = NULL;
   Gtk::MenuItem *separator5 = NULL;
   Gtk::ImageMenuItem *cut = NULL;
   Gtk::ImageMenuItem *copy = NULL;
   Gtk::ImageMenuItem *paste = NULL;
   Gtk::ImageMenuItem *menu_delete = NULL;
   Gtk::Menu *edit_menu = Gtk::manage(new class Gtk::Menu());
   Gtk::MenuItem *edit = NULL;
   change_name = NULL;
   change_color = NULL;
   Gtk::MenuItem *separator6 = NULL;
   add_computer_player = NULL;
   remove_computer_players = NULL;
   setup_computer_player = NULL;
   Gtk::Menu *player_menu = Gtk::manage(new class Gtk::Menu());
   Gtk::MenuItem *player = NULL;
   Gtk::MenuItem *how_to_play = NULL;
   Gtk::MenuItem *about = NULL;
   Gtk::Menu *menuitem4_menu = Gtk::manage(new class Gtk::Menu());
   Gtk::MenuItem *menuitem4 = NULL;
   Gtk::MenuBar *menubar1 = Gtk::manage(new class Gtk::MenuBar());
   game_view = new class game_view();

   Gtk::Frame *frame4 = Gtk::manage(new class Gtk::Frame());
   logo = new class GtkImage();
   rule_label = Gtk::manage(new class Gtk::Label(_("")));

   Gtk::VBox *vbox12 = Gtk::manage(new class Gtk::VBox(false, 0));
   Gtk::Alignment *alignment16 = Gtk::manage(new class Gtk::Alignment(0.5, 0.5, 1, 1));
   Gtk::Label *label49 = Gtk::manage(new class Gtk::Label(_("<b>Game</b>")));
   Gtk::Frame *frame11 = Gtk::manage(new class Gtk::Frame());
   player_name1 = Gtk::manage(new class Gtk::Label(_("")));
   player_name2 = Gtk::manage(new class Gtk::Label(_("")));
   player_name3 = Gtk::manage(new class Gtk::Label(_("")));
   player_name4 = Gtk::manage(new class Gtk::Label(_("")));
   player_name5 = Gtk::manage(new class Gtk::Label(_("")));
   player_name6 = Gtk::manage(new class Gtk::Label(_("")));
   player_peg1 = new class GtkImage();
   player_peg2 = new class GtkImage();
   player_peg3 = new class GtkImage();
   player_peg4 = new class GtkImage();
   player_peg5 = new class GtkImage();
   player_peg6 = new class GtkImage();

   Gtk::Table *table1 = Gtk::manage(new class Gtk::Table(2, 2, false));
   Gtk::Alignment *alignment5 = Gtk::manage(new class Gtk::Alignment(0.5, 0.5, 1, 1));
   Gtk::Label *label11 = Gtk::manage(new class Gtk::Label(_("<b>Players</b>")));
   Gtk::Frame *frame5 = Gtk::manage(new class Gtk::Frame());
   move_counter = Gtk::manage(new class Gtk::Label(_("")));

   Gtk::Alignment *alignment15 = Gtk::manage(new class Gtk::Alignment(0.5, 0.5, 1, 1));
   Gtk::Label *label47 = Gtk::manage(new class Gtk::Label(_("<b>Move</b>")));
   Gtk::Frame *frame10 = Gtk::manage(new class Gtk::Frame());
   Gtk::VBox *vbox3 = Gtk::manage(new class Gtk::VBox(false, 0));
   Gtk::HBox *hbox1 = Gtk::manage(new class Gtk::HBox(false, 0));
   message_view = Gtk::manage(new class Gtk::TextView());

   Gtk::ScrolledWindow *scrolledwindow1 = Gtk::manage(new class Gtk::ScrolledWindow());
   chat_entry = Gtk::manage(new class Gtk::Entry());

   Gtk::VBox *vbox2 = Gtk::manage(new class Gtk::VBox(false, 0));
   Gtk::VPaned *vpaned1 = Gtk::manage(new class Gtk::VPaned());
   Gtk::Statusbar *statusbar = Gtk::manage(new class Gtk::Statusbar());
   Gtk::VBox *vbox1 = Gtk::manage(new class Gtk::VBox(false, 0));

   restart_submenu_menu->items().push_back(Gtk::Menu_Helpers::MenuElem(_("Rot_ate Players"), Gtk::GMM_GTKMM_22_24(Menu_Helpers::,)AccelKey(GDK_A, Gdk::CONTROL_MASK)));
   rotate = (Gtk::MenuItem *)&restart_submenu_menu->items().back();

   restart_submenu_menu->items().push_back(Gtk::Menu_Helpers::MenuElem(_("Shu_ffle Players"), Gtk::GMM_GTKMM_22_24(Menu_Helpers::,)AccelKey(GDK_F, Gdk::CONTROL_MASK)));
   shuffle = (Gtk::MenuItem *)&restart_submenu_menu->items().back();

   restart_submenu_menu->items().push_back(Gtk::Menu_Helpers::MenuElem(_("_Keep Same Order"), Gtk::GMM_GTKMM_22_24(Menu_Helpers::,)AccelKey(GDK_K, Gdk::CONTROL_MASK)));
   restart_game = (Gtk::MenuItem *)&restart_submenu_menu->items().back();

   menuitem1_menu->items().push_back(Gtk::Menu_Helpers::MenuElem(_("Host _New Board..."), Gtk::GMM_GTKMM_22_24(Menu_Helpers::,)AccelKey(GDK_N, Gdk::CONTROL_MASK)));
   new_game = (Gtk::MenuItem *)&menuitem1_menu->items().back();

   menuitem1_menu->items().push_back(Gtk::Menu_Helpers::MenuElem(_("S_top Hosting"), Gtk::GMM_GTKMM_22_24(Menu_Helpers::,)AccelKey(GDK_T, Gdk::CONTROL_MASK)));
   end_game = (Gtk::MenuItem *)&menuitem1_menu->items().back();

   menuitem1_menu->items().push_back(Gtk::Menu_Helpers::SeparatorElem());
   separator4 = (Gtk::MenuItem *)&menuitem1_menu->items().back();

   menuitem1_menu->items().push_back(Gtk::Menu_Helpers::MenuElem(_("_Join a Board..."), Gtk::GMM_GTKMM_22_24(Menu_Helpers::,)AccelKey(GDK_J, Gdk::CONTROL_MASK)));
   join_game = (Gtk::MenuItem *)&menuitem1_menu->items().back();

   menuitem1_menu->items().push_back(Gtk::Menu_Helpers::MenuElem(_("_Leave Board"), Gtk::GMM_GTKMM_22_24(Menu_Helpers::,)AccelKey(GDK_L, Gdk::CONTROL_MASK)));
   leave_game = (Gtk::MenuItem *)&menuitem1_menu->items().back();

   menuitem1_menu->items().push_back(Gtk::Menu_Helpers::SeparatorElem());
   separatormenuitem1 = (Gtk::MenuItem *)&menuitem1_menu->items().back();

   menuitem1_menu->items().push_back(Gtk::Menu_Helpers::MenuElem(_("Change _Game Settings..."), Gtk::GMM_GTKMM_22_24(Menu_Helpers::,)AccelKey(GDK_G, Gdk::CONTROL_MASK)));
   game_settings = (Gtk::MenuItem *)&menuitem1_menu->items().back();

   menuitem1_menu->items().push_back(Gtk::Menu_Helpers::MenuElem(_("_Restart Game"), *restart_submenu_menu));
   restart_submenu = (Gtk::MenuItem *)&menuitem1_menu->items().back();

   menuitem1_menu->items().push_back(Gtk::Menu_Helpers::SeparatorElem());
   separator7 = (Gtk::MenuItem *)&menuitem1_menu->items().back();

   menuitem1_menu->items().push_back(Gtk::Menu_Helpers::StockMenuElem(Gtk::StockID("gtk-quit")));
   quit = (Gtk::ImageMenuItem *)&menuitem1_menu->items().back();

   edit_menu->items().push_back(Gtk::Menu_Helpers::ImageMenuElem(_("_Undo"), Gtk::GMM_GTKMM_22_24(Menu_Helpers::,)AccelKey(GDK_Z, Gdk::CONTROL_MASK), *image46));
   undo = (Gtk::ImageMenuItem *)&edit_menu->items().back();

   edit_menu->items().push_back(Gtk::Menu_Helpers::ImageMenuElem(_("_Redo"), Gtk::GMM_GTKMM_22_24(Menu_Helpers::,)AccelKey(GDK_Y, Gdk::CONTROL_MASK), *image47));
   redo = (Gtk::ImageMenuItem *)&edit_menu->items().back();

   edit_menu->items().push_back(Gtk::Menu_Helpers::MenuElem(_("S_how Last Move"), Gtk::GMM_GTKMM_22_24(Menu_Helpers::,)AccelKey(GDK_H, Gdk::CONTROL_MASK)));
   show_last_move = (Gtk::MenuItem *)&edit_menu->items().back();

   edit_menu->items().push_back(Gtk::Menu_Helpers::SeparatorElem());
   separator5 = (Gtk::MenuItem *)&edit_menu->items().back();

   edit_menu->items().push_back(Gtk::Menu_Helpers::StockMenuElem(Gtk::StockID("gtk-cut")));
   cut = (Gtk::ImageMenuItem *)&edit_menu->items().back();

   edit_menu->items().push_back(Gtk::Menu_Helpers::StockMenuElem(Gtk::StockID("gtk-copy")));
   copy = (Gtk::ImageMenuItem *)&edit_menu->items().back();

   edit_menu->items().push_back(Gtk::Menu_Helpers::StockMenuElem(Gtk::StockID("gtk-paste")));
   paste = (Gtk::ImageMenuItem *)&edit_menu->items().back();

   edit_menu->items().push_back(Gtk::Menu_Helpers::StockMenuElem(Gtk::StockID("gtk-delete")));
   menu_delete = (Gtk::ImageMenuItem *)&edit_menu->items().back();

   player_menu->items().push_back(Gtk::Menu_Helpers::MenuElem(_("Change Na_me...")));
   change_name = (Gtk::MenuItem *)&player_menu->items().back();

   player_menu->items().push_back(Gtk::Menu_Helpers::MenuElem(_("C_hange Color...")));
   change_color = (Gtk::MenuItem *)&player_menu->items().back();

   player_menu->items().push_back(Gtk::Menu_Helpers::SeparatorElem());
   separator6 = (Gtk::MenuItem *)&player_menu->items().back();

   player_menu->items().push_back(Gtk::Menu_Helpers::MenuElem(_("_Add Computer Player"), Gtk::GMM_GTKMM_22_24(Menu_Helpers::,)AccelKey(GDK_D, Gdk::CONTROL_MASK)));
   add_computer_player = (Gtk::MenuItem *)&player_menu->items().back();

   player_menu->items().push_back(Gtk::Menu_Helpers::MenuElem(_("R_emove Computer Players"), Gtk::GMM_GTKMM_22_24(Menu_Helpers::,)AccelKey(GDK_E, Gdk::CONTROL_MASK)));
   remove_computer_players = (Gtk::MenuItem *)&player_menu->items().back();

   player_menu->items().push_back(Gtk::Menu_Helpers::MenuElem(_("Setu_p Computer Player..."), Gtk::GMM_GTKMM_22_24(Menu_Helpers::,)AccelKey(GDK_P, Gdk::CONTROL_MASK)));
   setup_computer_player = (Gtk::MenuItem *)&player_menu->items().back();

   menuitem4_menu->items().push_back(Gtk::Menu_Helpers::MenuElem(_("How to _Play")));
   how_to_play = (Gtk::MenuItem *)&menuitem4_menu->items().back();

   menuitem4_menu->items().push_back(Gtk::Menu_Helpers::MenuElem(_("_About")));
   about = (Gtk::MenuItem *)&menuitem4_menu->items().back();

   menubar1->items().push_back(Gtk::Menu_Helpers::MenuElem(_("_Game"), *menuitem1_menu));
   menuitem1 = (Gtk::MenuItem *)&menubar1->items().back();

   menubar1->items().push_back(Gtk::Menu_Helpers::MenuElem(_("_Edit"), *edit_menu));
   edit = (Gtk::MenuItem *)&menubar1->items().back();

   menubar1->items().push_back(Gtk::Menu_Helpers::MenuElem(_("_Player"), *player_menu));
   player = (Gtk::MenuItem *)&menubar1->items().back();

   menubar1->items().push_back(Gtk::Menu_Helpers::MenuElem(_("_Help"), *menuitem4_menu));
   menuitem4 = (Gtk::MenuItem *)&menubar1->items().back();
   image46->set_alignment(0.5,0.5);
   image46->set_padding(0,0);
   image47->set_alignment(0.5,0.5);
   image47->set_padding(0,0);
   game_view->set_events(Gdk::EXPOSURE_MASK | Gdk::BUTTON_PRESS_MASK | Gdk::KEY_PRESS_MASK);
   game_view->set_flags(Gtk::CAN_FOCUS);
   frame4->set_border_width(6);
   frame4->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame4->set_label_align(0,0.5);
   frame4->add(*game_view);
   logo->set_size_request(10,10);
   rule_label->set_alignment(0.5,0.5);
   rule_label->set_padding(0,0);
   rule_label->set_justify(Gtk::JUSTIFY_CENTER);
   rule_label->set_line_wrap(false);
   rule_label->set_use_markup(false);
   rule_label->set_selectable(false);
   vbox12->pack_start(*logo);
   vbox12->pack_start(*rule_label, Gtk::PACK_SHRINK, 0);
   alignment16->add(*vbox12);
   label49->set_alignment(0.5,0.5);
   label49->set_padding(0,0);
   label49->set_justify(Gtk::JUSTIFY_LEFT);
   label49->set_line_wrap(false);
   label49->set_use_markup(true);
   label49->set_selectable(false);
   frame11->set_border_width(6);
   frame11->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame11->set_label_align(0,0.5);
   frame11->add(*alignment16);
   frame11->set_label_widget(*label49);
   player_name1->set_alignment(0,0.5);
   player_name1->set_padding(0,0);
   player_name1->set_justify(Gtk::JUSTIFY_LEFT);
   player_name1->set_line_wrap(false);
   player_name1->set_use_markup(false);
   player_name1->set_selectable(false);
   player_name2->set_alignment(0,0.5);
   player_name2->set_padding(0,0);
   player_name2->set_justify(Gtk::JUSTIFY_LEFT);
   player_name2->set_line_wrap(false);
   player_name2->set_use_markup(false);
   player_name2->set_selectable(false);
   player_name3->set_alignment(0,0.5);
   player_name3->set_padding(0,0);
   player_name3->set_justify(Gtk::JUSTIFY_LEFT);
   player_name3->set_line_wrap(false);
   player_name3->set_use_markup(false);
   player_name3->set_selectable(false);
   player_name4->set_alignment(0,0.5);
   player_name4->set_padding(0,0);
   player_name4->set_justify(Gtk::JUSTIFY_LEFT);
   player_name4->set_line_wrap(false);
   player_name4->set_use_markup(false);
   player_name4->set_selectable(false);
   player_name5->set_alignment(0,0.5);
   player_name5->set_padding(0,0);
   player_name5->set_justify(Gtk::JUSTIFY_LEFT);
   player_name5->set_line_wrap(false);
   player_name5->set_use_markup(false);
   player_name5->set_selectable(false);
   player_name6->set_alignment(0,0.5);
   player_name6->set_padding(0,0);
   player_name6->set_justify(Gtk::JUSTIFY_LEFT);
   player_name6->set_line_wrap(false);
   player_name6->set_use_markup(false);
   player_name6->set_selectable(false);
   player_peg1->set_size_request(10,10);
   table1->set_row_spacings(2);
   table1->set_col_spacings(3);
   table1->attach(*player_name1, 1, 2, 0, 1, Gtk::EXPAND|Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table1->attach(*player_name2, 1, 2, 1, 2, Gtk::EXPAND|Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table1->attach(*player_name3, 1, 2, 2, 3, Gtk::EXPAND|Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table1->attach(*player_name4, 1, 2, 3, 4, Gtk::EXPAND|Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table1->attach(*player_name5, 1, 2, 4, 5, Gtk::EXPAND|Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table1->attach(*player_name6, 1, 2, 5, 6, Gtk::EXPAND|Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table1->attach(*player_peg1, 0, 1, 0, 1, Gtk::FILL, Gtk::FILL, 3, 3);
   table1->attach(*player_peg2, 0, 1, 1, 2, Gtk::FILL, Gtk::FILL, 3, 3);
   table1->attach(*player_peg3, 0, 1, 2, 3, Gtk::FILL, Gtk::FILL, 3, 3);
   table1->attach(*player_peg4, 0, 1, 3, 4, Gtk::FILL, Gtk::FILL, 3, 3);
   table1->attach(*player_peg5, 0, 1, 4, 5, Gtk::FILL, Gtk::FILL, 3, 3);
   table1->attach(*player_peg6, 0, 1, 5, 6, Gtk::FILL, Gtk::FILL, 3, 3);
   alignment5->add(*table1);
   label11->set_alignment(0.5,0.5);
   label11->set_padding(0,0);
   label11->set_justify(Gtk::JUSTIFY_LEFT);
   label11->set_line_wrap(false);
   label11->set_use_markup(true);
   label11->set_selectable(false);
   frame5->set_border_width(6);
   frame5->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame5->set_label_align(0,0.5);
   frame5->add(*alignment5);
   frame5->set_label_widget(*label11);
   move_counter->set_alignment(0.5,0.5);
   move_counter->set_padding(0,0);
   move_counter->set_justify(Gtk::JUSTIFY_CENTER);
   move_counter->set_line_wrap(false);
   move_counter->set_use_markup(false);
   move_counter->set_selectable(false);
   alignment15->add(*move_counter);
   label47->set_alignment(0.5,0.5);
   label47->set_padding(0,0);
   label47->set_justify(Gtk::JUSTIFY_LEFT);
   label47->set_line_wrap(false);
   label47->set_use_markup(true);
   label47->set_selectable(false);
   frame10->set_border_width(6);
   frame10->set_shadow_type(Gtk::SHADOW_ETCHED_IN);
   frame10->set_label_align(0,0.5);
   frame10->add(*alignment15);
   frame10->set_label_widget(*label47);
   vbox3->pack_start(*frame11, Gtk::PACK_SHRINK, 0);
   vbox3->pack_start(*frame5, Gtk::PACK_SHRINK, 0);
   vbox3->pack_start(*frame10, Gtk::PACK_SHRINK, 0);
   hbox1->set_border_width(6);
   hbox1->pack_start(*frame4);
   hbox1->pack_start(*vbox3, Gtk::PACK_SHRINK, 0);
   message_view->set_editable(false);
   message_view->set_cursor_visible(false);
   message_view->set_pixels_above_lines(0);
   message_view->set_pixels_below_lines(0);
   message_view->set_pixels_inside_wrap(0);
   message_view->set_left_margin(0);
   message_view->set_right_margin(0);
   message_view->set_indent(0);
   message_view->set_wrap_mode(Gtk::WRAP_WORD);
   message_view->set_justification(Gtk::JUSTIFY_LEFT);
   message_view->get_buffer()->set_text(_("Welcome to Chinese Checkers!\n"
		"Choose the 'Host New Board' or 'Join A Board' commands to start playing.\n"
		""));
   scrolledwindow1->set_shadow_type(Gtk::SHADOW_IN);
   scrolledwindow1->set_policy(Gtk::POLICY_NEVER, Gtk::POLICY_ALWAYS);
   scrolledwindow1->property_window_placement().set_value(Gtk::CORNER_TOP_LEFT);
   scrolledwindow1->add(*message_view);
   chat_entry->set_flags(Gtk::CAN_FOCUS);
   chat_entry->set_visibility(true);
   chat_entry->set_editable(true);
   chat_entry->set_max_length(0);
   chat_entry->set_text(_(""));
   chat_entry->set_has_frame(true);
   chat_entry->set_activates_default(false);
   vbox2->set_border_width(3);
   vbox2->pack_start(*scrolledwindow1);
   vbox2->pack_start(*chat_entry, Gtk::PACK_SHRINK, 0);
   vpaned1->set_flags(Gtk::CAN_FOCUS);
   vpaned1->pack1(*hbox1, Gtk::EXPAND|Gtk::SHRINK);
   vpaned1->pack2(*vbox2, Gtk::EXPAND|Gtk::SHRINK);
   vbox1->pack_start(*menubar1, Gtk::PACK_SHRINK, 0);
   vbox1->pack_start(*vpaned1);
   vbox1->pack_start(*statusbar, Gtk::PACK_SHRINK, 0);
   main_win->set_title(_("Chinese Checkers"));
   main_win->set_default_size(500,400);
   main_win->set_modal(false);
   main_win->property_window_position().set_value(Gtk::WIN_POS_NONE);
   main_win->set_resizable(true);
   main_win->property_destroy_with_parent().set_value(true);
   main_win->add(*vbox1);
   new_game->show();
   end_game->show();
   separator4->show();
   join_game->show();
   leave_game->show();
   separatormenuitem1->show();
   game_settings->show();
   rotate->show();
   shuffle->show();
   restart_game->show();
   restart_submenu->show();
   separator7->show();
   quit->show();
   menuitem1->show();
   image46->show();
   undo->show();
   image47->show();
   redo->show();
   show_last_move->show();
   separator5->show();
   cut->show();
   copy->show();
   paste->show();
   menu_delete->show();
   edit->show();
   change_name->show();
   change_color->show();
   separator6->show();
   add_computer_player->show();
   remove_computer_players->show();
   setup_computer_player->show();
   player->show();
   how_to_play->show();
   about->show();
   menuitem4->show();
   menubar1->show();
   game_view->show();
   frame4->show();
   logo->show();
   rule_label->show();
   vbox12->show();
   alignment16->show();
   label49->show();
   frame11->show();
   player_name1->show();
   player_name2->show();
   player_name3->show();
   player_name4->show();
   player_name5->show();
   player_name6->show();
   player_peg1->show();
   player_peg2->show();
   player_peg3->show();
   player_peg4->show();
   player_peg5->show();
   player_peg6->show();
   table1->show();
   alignment5->show();
   label11->show();
   frame5->show();
   move_counter->show();
   alignment15->show();
   label47->show();
   frame10->show();
   vbox3->show();
   hbox1->show();
   message_view->show();
   scrolledwindow1->show();
   chat_entry->show();
   vbox2->show();
   vpaned1->show();
   statusbar->show();
   vbox1->show();
   main_win->show();
   new_game->signal_activate().connect(sigc::mem_fun(this, &main_win_glade::on_new_game_activate), false);
   end_game->signal_activate().connect(sigc::mem_fun(this, &main_win_glade::on_end_game_activate), false);
   join_game->signal_activate().connect(sigc::mem_fun(this, &main_win_glade::on_join_game_activate), false);
   leave_game->signal_activate().connect(sigc::mem_fun(this, &main_win_glade::on_leave_game_activate), false);
   game_settings->signal_activate().connect(sigc::mem_fun(this, &main_win_glade::on_game_settings_activate), false);
   rotate->signal_activate().connect(sigc::mem_fun(this, &main_win_glade::on_rotate_activate), false);
   shuffle->signal_activate().connect(sigc::mem_fun(this, &main_win_glade::on_shuffle_activate), false);
   restart_game->signal_activate().connect(sigc::mem_fun(this, &main_win_glade::on_restart_game_activate), false);
   quit->signal_activate().connect(sigc::mem_fun(this, &main_win_glade::on_quit_activate), false);
   undo->signal_activate().connect(sigc::mem_fun(this, &main_win_glade::on_undo_activate), false);
   redo->signal_activate().connect(sigc::mem_fun(this, &main_win_glade::on_redo_activate), false);
   show_last_move->signal_activate().connect(sigc::mem_fun(this, &main_win_glade::on_show_last_move_activate), false);
   cut->signal_activate().connect(sigc::mem_fun(this, &main_win_glade::on_cut_activate), false);
   copy->signal_activate().connect(sigc::mem_fun(this, &main_win_glade::on_copy_activate), false);
   paste->signal_activate().connect(sigc::mem_fun(this, &main_win_glade::on_paste_activate), false);
   menu_delete->signal_activate().connect(sigc::mem_fun(this, &main_win_glade::on_delete_activate), false);
   change_name->signal_activate().connect(sigc::mem_fun(this, &main_win_glade::on_change_name_activate), false);
   change_color->signal_activate().connect(sigc::mem_fun(this, &main_win_glade::on_change_color_activate), false);
   add_computer_player->signal_activate().connect(sigc::mem_fun(this, &main_win_glade::on_add_computer_player_activate), false);
   remove_computer_players->signal_activate().connect(sigc::mem_fun(this, &main_win_glade::on_remove_computer_players_activate), false);
   setup_computer_player->signal_activate().connect(sigc::mem_fun(this, &main_win_glade::on_setup_computer_player_activate), false);
   how_to_play->signal_activate().connect(sigc::mem_fun(this, &main_win_glade::on_how_to_play_activate), false);
   about->signal_activate().connect(sigc::mem_fun(this, &main_win_glade::on_about_activate), false);
   chat_entry->signal_activate().connect(sigc::mem_fun(this, &main_win_glade::on_chat_entry_activate), false);
}

main_win_glade::~main_win_glade()
{  delete game_view;
   delete logo;
   delete player_peg1;
   delete player_peg2;
   delete player_peg3;
   delete player_peg4;
   delete player_peg5;
   delete player_peg6;
   delete gmm_data;
}
