<!-- ##### SECTION Title ##### -->
UDP

<!-- ##### SECTION Short_Description ##### -->
UDP socket

<!-- ##### SECTION Long_Description ##### -->
<para>
This module provides support for UDP sockets.  UDP is an internet
protocol that transfers packets by best-effort delivery.  Packets may
be lost or arrive out-of-order.  Use TCP if your protocol requires
data transfered reliably and in-order -- most do.
</para>

<para>
A UDP socket is represented by a #GUdpSocket structure.  To create a
#GUdpSocket, call gnet_udp_socket_new(),
gnet_udp_socket_new_with_port(), or gnet_udp_socket_new_full().
</para>

<para>
To send a packet, call gnet_udp_socket_send().  To receive a packet,
call gnet_udp_socket_receive().  gnet_udp_socket_send() will block if
the OS cannot buffer the packet immediately.
gnet_udp_socket_receive() will block until there is a packet available
to receive.  Call gnet_udp_socket_has_packet() to determine whether a
packet is available immediately.  A more elegant method is to get the
#GIOChannel and add a read watch.  A callback will be called when a
packet is available.  Note that a UDP socket's #GIOChannel is not a
normal #GIOChannel -- it should not be written to or read from
directly.
</para>

<para>
Packets have a time-to-live (TTL) field.  This field is decremented
before a router forwards the packet.  If the TTL reaches zero, the
packet is dropped.  The TTL can be set by calling
gnet_udp_socket_get_ttl().  The default value is sufficient for most
applications.
</para>

<!-- ##### SECTION See_Also ##### -->
<para>

</para>

<!-- ##### SECTION Stability_Level ##### -->


<!-- ##### STRUCT GUdpSocket ##### -->
<para>

</para>


<!-- ##### FUNCTION gnet_udp_socket_new ##### -->
<para>

</para>

@Returns: 


<!-- ##### FUNCTION gnet_udp_socket_new_with_port ##### -->
<para>

</para>

@port: 
@Returns: 


<!-- ##### FUNCTION gnet_udp_socket_new_full ##### -->
<para>

</para>

@iface: 
@port: 
@Returns: 


<!-- ##### FUNCTION gnet_udp_socket_delete ##### -->
<para>

</para>

@socket: 


<!-- ##### FUNCTION gnet_udp_socket_ref ##### -->
<para>

</para>

@socket: 


<!-- ##### FUNCTION gnet_udp_socket_unref ##### -->
<para>

</para>

@socket: 


<!-- ##### FUNCTION gnet_udp_socket_send ##### -->
<para>

</para>

@socket: 
@buffer: 
@length: 
@dst: 
@Returns: 


<!-- ##### FUNCTION gnet_udp_socket_receive ##### -->
<para>

</para>

@socket: 
@buffer: 
@length: 
@src: 
@Returns: 


<!-- ##### FUNCTION gnet_udp_socket_has_packet ##### -->
<para>

</para>

@socket: 
@Returns: 


<!-- ##### FUNCTION gnet_udp_socket_get_io_channel ##### -->
<para>

</para>

@socket: 
@Returns: 


<!-- ##### FUNCTION gnet_udp_socket_get_local_inetaddr ##### -->
<para>

</para>

@socket: 
@Returns: 


<!-- ##### FUNCTION gnet_udp_socket_get_ttl ##### -->
<para>

</para>

@socket: 
@Returns: 


<!-- ##### FUNCTION gnet_udp_socket_set_ttl ##### -->
<para>

</para>

@socket: 
@ttl: 
@Returns: 


