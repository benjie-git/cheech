<refentry id="gnet-uri">
<refmeta>
<refentrytitle role="top_of_page">URI</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GNET Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>URI</refname>
<refpurpose>Uniform Resource Identifier (URI)</refpurpose>
<!--[<xref linkend="desc" endterm="desc.title"/>]-->
</refnamediv>

<refsynopsisdiv role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>

#include &lt;gnet.h&gt;


                    <link linkend="GURI:CAPS">GURI</link>;
<link linkend="GURI:CAPS">GURI</link>*               <link linkend="gnet-uri-new">gnet_uri_new</link>                        (const <link linkend="gchar">gchar</link> *uri);
<link linkend="GURI:CAPS">GURI</link>*               <link linkend="gnet-uri-new-fields">gnet_uri_new_fields</link>                 (const <link linkend="gchar">gchar</link> *scheme,
                                                         const <link linkend="gchar">gchar</link> *hostname,
                                                         const <link linkend="gint">gint</link> port,
                                                         const <link linkend="gchar">gchar</link> *path);
<link linkend="GURI:CAPS">GURI</link>*               <link linkend="gnet-uri-new-fields-all">gnet_uri_new_fields_all</link>             (const <link linkend="gchar">gchar</link> *scheme,
                                                         const <link linkend="gchar">gchar</link> *userinfo,
                                                         const <link linkend="gchar">gchar</link> *hostname,
                                                         const <link linkend="gint">gint</link> port,
                                                         const <link linkend="gchar">gchar</link> *path,
                                                         const <link linkend="gchar">gchar</link> *query,
                                                         const <link linkend="gchar">gchar</link> *fragment);
<link linkend="GURI:CAPS">GURI</link>*               <link linkend="gnet-uri-clone">gnet_uri_clone</link>                      (const <link linkend="GURI:CAPS">GURI</link> *uri);
<link linkend="void">void</link>                <link linkend="gnet-uri-delete">gnet_uri_delete</link>                     (<link linkend="GURI:CAPS">GURI</link> *uri);
<link linkend="void">void</link>                <link linkend="gnet-uri-escape">gnet_uri_escape</link>                     (<link linkend="GURI:CAPS">GURI</link> *uri);
<link linkend="void">void</link>                <link linkend="gnet-uri-unescape">gnet_uri_unescape</link>                   (<link linkend="GURI:CAPS">GURI</link> *uri);
<link linkend="gchar">gchar</link>*              <link linkend="gnet-uri-get-string">gnet_uri_get_string</link>                 (const <link linkend="GURI:CAPS">GURI</link> *uri);
<link linkend="void">void</link>                <link linkend="gnet-uri-set-scheme">gnet_uri_set_scheme</link>                 (<link linkend="GURI:CAPS">GURI</link> *uri,
                                                         const <link linkend="gchar">gchar</link> *scheme);
<link linkend="void">void</link>                <link linkend="gnet-uri-set-userinfo">gnet_uri_set_userinfo</link>               (<link linkend="GURI:CAPS">GURI</link> *uri,
                                                         const <link linkend="gchar">gchar</link> *userinfo);
<link linkend="void">void</link>                <link linkend="gnet-uri-set-hostname">gnet_uri_set_hostname</link>               (<link linkend="GURI:CAPS">GURI</link> *uri,
                                                         const <link linkend="gchar">gchar</link> *hostname);
<link linkend="void">void</link>                <link linkend="gnet-uri-set-port">gnet_uri_set_port</link>                   (<link linkend="GURI:CAPS">GURI</link> *uri,
                                                         <link linkend="gint">gint</link> port);
<link linkend="void">void</link>                <link linkend="gnet-uri-set-path">gnet_uri_set_path</link>                   (<link linkend="GURI:CAPS">GURI</link> *uri,
                                                         const <link linkend="gchar">gchar</link> *path);
<link linkend="void">void</link>                <link linkend="gnet-uri-set-query">gnet_uri_set_query</link>                  (<link linkend="GURI:CAPS">GURI</link> *uri,
                                                         const <link linkend="gchar">gchar</link> *query);
<link linkend="void">void</link>                <link linkend="gnet-uri-set-fragment">gnet_uri_set_fragment</link>               (<link linkend="GURI:CAPS">GURI</link> *uri,
                                                         const <link linkend="gchar">gchar</link> *fragment);
<link linkend="guint">guint</link>               <link linkend="gnet-uri-hash">gnet_uri_hash</link>                       (<link linkend="gconstpointer">gconstpointer</link> p);
<link linkend="gboolean">gboolean</link>            <link linkend="gnet-uri-equal">gnet_uri_equal</link>                      (<link linkend="gconstpointer">gconstpointer</link> p1,
                                                         <link linkend="gconstpointer">gconstpointer</link> p2);
<link linkend="gboolean">gboolean</link>            <link linkend="gnet-uri-parse-inplace">gnet_uri_parse_inplace</link>              (<link linkend="GURI:CAPS">GURI</link> *guri,
                                                         <link linkend="gchar">gchar</link> *uri,
                                                         <link linkend="gchar">gchar</link> *hostname,
                                                         <link linkend="gsize">gsize</link> len);
</synopsis>
</refsynopsisdiv>









<refsect1 role="desc">
<title role="desc.title">Description</title>
<para>
A URI is a Uniform Resource Identifier, similar to a URL.  This module
provides functions for creating and manipulating URIs.  A URI is
represented by <link linkend="GURI:CAPS"><type>GURI</type></link>.  All fields in the <link linkend="GURI:CAPS"><type>GURI</type></link> structure are publicly
readable.
</para>

<para>
Create a URI from a string by calling <link linkend="gnet-uri-new"><function>gnet_uri_new()</function></link>.  To get the
string representation back, call <link linkend="gnet-uri-get-string"><function>gnet_uri_get_string()</function></link>.  To escape a
URI call <link linkend="gnet-uri-escape"><function>gnet_uri_escape()</function></link>, and to unescape it call
<link linkend="gnet-uri-unescape"><function>gnet_uri_unescape()</function></link>.  Network protocols use escaped URIs.  People use
unescaped URIs.
</para>
</refsect1>

<refsect1 role="details">
<title role="details.title">Details</title>
<refsect2>
<title><anchor id="GURI:CAPS" role="struct"/>GURI</title>
<indexterm><primary>GURI</primary></indexterm><programlisting>typedef struct {
  gchar* scheme;
  gchar* userinfo;
  gchar* hostname;
  gint   port;
  gchar* path;
  gchar* query;
  gchar* fragment;
} GURI;
</programlisting>
<para>
The <link linkend="GURI:CAPS"><type>GURI</type></link> structure represents a URI.  All fields in this
 structure are publicly readable.</para>
<para>

</para><variablelist role="struct">
<varlistentry>
<term><link linkend="gchar">gchar</link>&nbsp;*<structfield>scheme</structfield>;</term>
<listitem><simpara> Scheme (or protocol)
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="gchar">gchar</link>&nbsp;*<structfield>userinfo</structfield>;</term>
<listitem><simpara> User info
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="gchar">gchar</link>&nbsp;*<structfield>hostname</structfield>;</term>
<listitem><simpara> Host name
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="gint">gint</link>&nbsp;<structfield>port</structfield>;</term>
<listitem><simpara> Port number
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="gchar">gchar</link>&nbsp;*<structfield>path</structfield>;</term>
<listitem><simpara> Path
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="gchar">gchar</link>&nbsp;*<structfield>query</structfield>;</term>
<listitem><simpara> Query
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="gchar">gchar</link>&nbsp;*<structfield>fragment</structfield>;</term>
<listitem><simpara> Fragment
</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnet-uri-new" role="function"/>gnet_uri_new ()</title>
<indexterm><primary>gnet_uri_new</primary></indexterm><programlisting><link linkend="GURI:CAPS">GURI</link>*               gnet_uri_new                        (const <link linkend="gchar">gchar</link> *uri);</programlisting>
<para>
Creates a <link linkend="GURI:CAPS"><type>GURI</type></link> from a string.  Empty fields are set to NULL.  The
 parser does not validate the URI -- it will accept some malformed
 URI.  URIs are usually in the form
 scheme://userinfo<parameter>hostname</parameter>:port/path?query<link linkend="fragment"><type>fragment</type></link>
</para>
<para>
 URIs created from user input are typically unescaped.  URIs
 created from machine input (e.g. received over the internet) are
 typically escaped.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>uri</parameter>&nbsp;:</term>
<listitem><simpara> URI string
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a new <link linkend="GURI:CAPS"><type>GURI</type></link>, or NULL if there was a failure.

</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnet-uri-new-fields" role="function"/>gnet_uri_new_fields ()</title>
<indexterm><primary>gnet_uri_new_fields</primary></indexterm><programlisting><link linkend="GURI:CAPS">GURI</link>*               gnet_uri_new_fields                 (const <link linkend="gchar">gchar</link> *scheme,
                                                         const <link linkend="gchar">gchar</link> *hostname,
                                                         const <link linkend="gint">gint</link> port,
                                                         const <link linkend="gchar">gchar</link> *path);</programlisting>
<para>
Creates a <link linkend="GURI:CAPS"><type>GURI</type></link> from the fields.  This function uses the most
 common fields.  Use <link linkend="gnet-uri-new-fields-all"><function>gnet_uri_new_fields_all()</function></link> to specify all
 fields.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>scheme</parameter>&nbsp;:</term>
<listitem><simpara> scheme
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>hostname</parameter>&nbsp;:</term>
<listitem><simpara> host name
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>port</parameter>&nbsp;:</term>
<listitem><simpara> port
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>path</parameter>&nbsp;:</term>
<listitem><simpara> path
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a new <link linkend="GURI:CAPS"><type>GURI</type></link>.

</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnet-uri-new-fields-all" role="function"/>gnet_uri_new_fields_all ()</title>
<indexterm><primary>gnet_uri_new_fields_all</primary></indexterm><programlisting><link linkend="GURI:CAPS">GURI</link>*               gnet_uri_new_fields_all             (const <link linkend="gchar">gchar</link> *scheme,
                                                         const <link linkend="gchar">gchar</link> *userinfo,
                                                         const <link linkend="gchar">gchar</link> *hostname,
                                                         const <link linkend="gint">gint</link> port,
                                                         const <link linkend="gchar">gchar</link> *path,
                                                         const <link linkend="gchar">gchar</link> *query,
                                                         const <link linkend="gchar">gchar</link> *fragment);</programlisting>
<para>
Creates a <link linkend="GURI:CAPS"><type>GURI</type></link> from all fields.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>scheme</parameter>&nbsp;:</term>
<listitem><simpara> scheme
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>userinfo</parameter>&nbsp;:</term>
<listitem><simpara> user info
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>hostname</parameter>&nbsp;:</term>
<listitem><simpara> host name
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>port</parameter>&nbsp;:</term>
<listitem><simpara> port
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>path</parameter>&nbsp;:</term>
<listitem><simpara> path
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>query</parameter>&nbsp;:</term>
<listitem><simpara> query
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fragment</parameter>&nbsp;:</term>
<listitem><simpara> fragment
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a new <link linkend="GURI:CAPS"><type>GURI</type></link>.

</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnet-uri-clone" role="function"/>gnet_uri_clone ()</title>
<indexterm><primary>gnet_uri_clone</primary></indexterm><programlisting><link linkend="GURI:CAPS">GURI</link>*               gnet_uri_clone                      (const <link linkend="GURI:CAPS">GURI</link> *uri);</programlisting>
<para>
Copies a <link linkend="GURI:CAPS"><type>GURI</type></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>uri</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GURI:CAPS"><type>GURI</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a copy of <parameter>uri</parameter>.

</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnet-uri-delete" role="function"/>gnet_uri_delete ()</title>
<indexterm><primary>gnet_uri_delete</primary></indexterm><programlisting><link linkend="void">void</link>                gnet_uri_delete                     (<link linkend="GURI:CAPS">GURI</link> *uri);</programlisting>
<para>
Deletes a <link linkend="GURI:CAPS"><type>GURI</type></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>uri</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GURI:CAPS"><type>GURI</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnet-uri-escape" role="function"/>gnet_uri_escape ()</title>
<indexterm><primary>gnet_uri_escape</primary></indexterm><programlisting><link linkend="void">void</link>                gnet_uri_escape                     (<link linkend="GURI:CAPS">GURI</link> *uri);</programlisting>
<para>
Escapes the fields in a <link linkend="GURI:CAPS"><type>GURI</type></link>.  Network protocols use escaped
 URIs.  People use unescaped URIs.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>uri</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GURI:CAPS"><type>GURI</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnet-uri-unescape" role="function"/>gnet_uri_unescape ()</title>
<indexterm><primary>gnet_uri_unescape</primary></indexterm><programlisting><link linkend="void">void</link>                gnet_uri_unescape                   (<link linkend="GURI:CAPS">GURI</link> *uri);</programlisting>
<para>
Unescapes the fields in the URI.  Network protocols use escaped
 URIs.  People use unescaped URIs.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>uri</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GURI:CAPS"><type>GURI</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnet-uri-get-string" role="function"/>gnet_uri_get_string ()</title>
<indexterm><primary>gnet_uri_get_string</primary></indexterm><programlisting><link linkend="gchar">gchar</link>*              gnet_uri_get_string                 (const <link linkend="GURI:CAPS">GURI</link> *uri);</programlisting>
<para>
Gets a string representation of a <link linkend="GURI:CAPS"><type>GURI</type></link>.  This function does not
 escape or unescape the fields first.  Call <link linkend="gnet-uri-escape"><function>gnet_uri_escape()</function></link> or
 gnet_uri_unescape first if necessary.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>uri</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GURI:CAPS"><type>GURI</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a string.

</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnet-uri-set-scheme" role="function"/>gnet_uri_set_scheme ()</title>
<indexterm><primary>gnet_uri_set_scheme</primary></indexterm><programlisting><link linkend="void">void</link>                gnet_uri_set_scheme                 (<link linkend="GURI:CAPS">GURI</link> *uri,
                                                         const <link linkend="gchar">gchar</link> *scheme);</programlisting>
<para>
Sets a <link linkend="GURI:CAPS"><type>GURI</type></link>'s scheme.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>uri</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GURI:CAPS"><type>GURI</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>scheme</parameter>&nbsp;:</term>
<listitem><simpara> scheme
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnet-uri-set-userinfo" role="function"/>gnet_uri_set_userinfo ()</title>
<indexterm><primary>gnet_uri_set_userinfo</primary></indexterm><programlisting><link linkend="void">void</link>                gnet_uri_set_userinfo               (<link linkend="GURI:CAPS">GURI</link> *uri,
                                                         const <link linkend="gchar">gchar</link> *userinfo);</programlisting>
<para>
Sets a <link linkend="GURI:CAPS"><type>GURI</type></link>'s user info.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>uri</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GURI:CAPS"><type>GURI</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>userinfo</parameter>&nbsp;:</term>
<listitem><simpara> user info
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnet-uri-set-hostname" role="function"/>gnet_uri_set_hostname ()</title>
<indexterm><primary>gnet_uri_set_hostname</primary></indexterm><programlisting><link linkend="void">void</link>                gnet_uri_set_hostname               (<link linkend="GURI:CAPS">GURI</link> *uri,
                                                         const <link linkend="gchar">gchar</link> *hostname);</programlisting>
<para>
Sets a <link linkend="GURI:CAPS"><type>GURI</type></link>'s host name.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>uri</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GURI:CAPS"><type>GURI</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>hostname</parameter>&nbsp;:</term>
<listitem><simpara> host name
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnet-uri-set-port" role="function"/>gnet_uri_set_port ()</title>
<indexterm><primary>gnet_uri_set_port</primary></indexterm><programlisting><link linkend="void">void</link>                gnet_uri_set_port                   (<link linkend="GURI:CAPS">GURI</link> *uri,
                                                         <link linkend="gint">gint</link> port);</programlisting>
<para>
Set a <link linkend="GURI:CAPS"><type>GURI</type></link>'s port.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>uri</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GURI:CAPS"><type>GURI</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>port</parameter>&nbsp;:</term>
<listitem><simpara> port
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnet-uri-set-path" role="function"/>gnet_uri_set_path ()</title>
<indexterm><primary>gnet_uri_set_path</primary></indexterm><programlisting><link linkend="void">void</link>                gnet_uri_set_path                   (<link linkend="GURI:CAPS">GURI</link> *uri,
                                                         const <link linkend="gchar">gchar</link> *path);</programlisting>
<para>
Set a <link linkend="GURI:CAPS"><type>GURI</type></link>'s path.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>uri</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GURI:CAPS"><type>GURI</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>path</parameter>&nbsp;:</term>
<listitem><simpara> path
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnet-uri-set-query" role="function"/>gnet_uri_set_query ()</title>
<indexterm><primary>gnet_uri_set_query</primary></indexterm><programlisting><link linkend="void">void</link>                gnet_uri_set_query                  (<link linkend="GURI:CAPS">GURI</link> *uri,
                                                         const <link linkend="gchar">gchar</link> *query);</programlisting>
<para>
Set a <link linkend="GURI:CAPS"><type>GURI</type></link>'s query.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>uri</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GURI:CAPS"><type>GURI</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>query</parameter>&nbsp;:</term>
<listitem><simpara> query
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnet-uri-set-fragment" role="function"/>gnet_uri_set_fragment ()</title>
<indexterm><primary>gnet_uri_set_fragment</primary></indexterm><programlisting><link linkend="void">void</link>                gnet_uri_set_fragment               (<link linkend="GURI:CAPS">GURI</link> *uri,
                                                         const <link linkend="gchar">gchar</link> *fragment);</programlisting>
<para>
Set a <link linkend="GURI:CAPS"><type>GURI</type></link>'s fragment.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>uri</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GURI:CAPS"><type>GURI</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>fragment</parameter>&nbsp;:</term>
<listitem><simpara> fragment
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnet-uri-hash" role="function"/>gnet_uri_hash ()</title>
<indexterm><primary>gnet_uri_hash</primary></indexterm><programlisting><link linkend="guint">guint</link>               gnet_uri_hash                       (<link linkend="gconstpointer">gconstpointer</link> p);</programlisting>
<para>
Creates a hash code for <parameter>p</parameter> for use with GHashTable.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>p</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GURI:CAPS"><type>GURI</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> hash code for <parameter>p</parameter>.

</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnet-uri-equal" role="function"/>gnet_uri_equal ()</title>
<indexterm><primary>gnet_uri_equal</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gnet_uri_equal                      (<link linkend="gconstpointer">gconstpointer</link> p1,
                                                         <link linkend="gconstpointer">gconstpointer</link> p2);</programlisting>
<para>
Compares two <link linkend="GURI:CAPS"><type>GURI</type></link>'s for equality.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>p1</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GURI:CAPS"><type>GURI</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>p2</parameter>&nbsp;:</term>
<listitem><simpara> another <link linkend="GURI:CAPS"><type>GURI</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> TRUE if they are equal; FALSE otherwise.

</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gnet-uri-parse-inplace" role="function" condition="since:2.0.8"/>gnet_uri_parse_inplace ()</title>
<indexterm role="2.0.8"><primary>gnet_uri_parse_inplace</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gnet_uri_parse_inplace              (<link linkend="GURI:CAPS">GURI</link> *guri,
                                                         <link linkend="gchar">gchar</link> *uri,
                                                         <link linkend="gchar">gchar</link> *hostname,
                                                         <link linkend="gsize">gsize</link> len);</programlisting>
<para>
This function parses an URI string very efficiently and without allocating
 any memory on the heap. It does this by modifying the passed-in string
 <parameter>uri</parameter> and changing field separators into string terminators in place. The
 result will then be put into the already-allocated and usually
 uninitialised, GURI structure <parameter>guri</parameter>.
</para>
<para>
 Because the slash (') which separates the hostname from the path in an URI
 is needed as the first character of the path, it cannot be turned into a
 string terminator for the hostname. This makes it necessary for the caller
 (ie. you) to pass in an array where the hostname can be put.
</para>
<para>
 If the URI has been parsed successfully, the fields of the GURI structure
 will either point into the given string <parameter>uri</parameter> (or to <parameter>hostname</parameter> in case of
 the hostname field), or be NULL. No freeing or de-initialising of the
 GURI structure is required.
</para>
<para>
 The only gnet_uri_*() functions you are allowed to call with this URI
 structure are <link linkend="gnet-uri-clone"><function>gnet_uri_clone()</function></link>, <link linkend="gnet-uri-equal"><function>gnet_uri_equal()</function></link>, <link linkend="gnet-uri-hash"><function>gnet_uri_hash()</function></link>,
 <link linkend="gnet-uri-get-string"><function>gnet_uri_get_string()</function></link> and <link linkend="gnet-uri-unescape"><function>gnet_uri_unescape()</function></link> (the latter unescapes the
 string fragments in place, so is safe to use here).
</para>
<para>
 You must not call any other gnet_uri_*() functions with this GURI,
 especially not any <link linkend="gnet-uri-set"><function>gnet_uri_set()</function></link> functions.
</para>
<para>
 Under normal circumstances, you should never need to use this function.
 Use <link linkend="gnet-uri-new"><function>gnet_uri_new()</function></link> instead.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>guri</parameter>&nbsp;:</term>
<listitem><simpara> pointer to an uninitialised <link linkend="GURI:CAPS"><type>GURI</type></link> structure (usually on the stack)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>uri</parameter>&nbsp;:</term>
<listitem><simpara> a writable URI string (which will be modified by this function!)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>hostname</parameter>&nbsp;:</term>
<listitem><simpara> a preallocated array of size <parameter>len</parameter>, into which the hostname will
            be copied if the URI has a hostname. This array should live
            as long as <parameter>guri</parameter> may be used, since <parameter>guri</parameter> might reference it.
            You may pass NULL here if you know your URIs won't contain a
            hostname field
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>len</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> TRUE if <parameter>uri</parameter> was parsed successfully and <link linkend="GURI:CAPS"><type>GURI</type></link> is usable,
          or FALSE if there was a failure.

</simpara></listitem></varlistentry>
</variablelist><para role="since">Since  2.0.8

</para></refsect2>

</refsect1>




</refentry>
